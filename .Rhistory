usethis::use_package("tidyr")
usethis::use_pipe(export = FALSE)
devtools::document()
usethis::use_pipe(export = FALSE)
usethis::use_package_doc()
usethis::use_pipe(export = FALSE)
confirmed = readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
deaths =  readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
usethis::use_package("dplyr")
usethis::use_package("data.table")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
corona = function(){
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
#
# library(ggplot2)
#
# d_dat = f[region == "Mainland China",  sum(active) ,c("date","region")]
#
# ggplot(d_dat, aes(x = date, y = V1, group = region)) +
#   geom_line()
}
corona()
corona = function(){
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
#
# library(ggplot2)
#
# d_dat = f[region == "Mainland China",  sum(active) ,c("date","region")]
#
# ggplot(d_dat, aes(x = date, y = V1, group = region)) +
#   geom_line()
return(f)
}
corona()
f = corona()
f
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
f
corona = function(){
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
#
# library(ggplot2)
#
# d_dat = f[region == "Mainland China",  sum(active) ,c("date","region")]
#
# ggplot(d_dat, aes(x = date, y = V1, group = region)) +
#   geom_line()
return(f)
}
corona()
library(covid19)
corona()
usethis::use_pipe()
library(covid19)
corona()
usethis::use_package("readr")
library(covid19)
covid19::corona()
confirmed = readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
confirmed
deaths =  readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv")
recovered =  readr::read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv")
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
?order
library(covid19)
library(covid19)
corona()
library(covid19)
corona()
library(covid19)
library(covid19)
covid19::corona()
x = covid19::corona()
x
class(x)
x
x
x
corona()
corona()
f = corona()
f
f
library(covid19)
covid19
library(covid19)
covid19::corona()
?fread
corona = function(){
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv", verbose = F)
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv", verbose = F)
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv", verbose = F)
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
f = data.frame(f)
return(f)
}
corona()
corona = function(){
confirmed = data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv", showProgress = F)
deaths =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv", showProgress = F)
recovered =  data.table::fread("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv", showProgress = F)
basic_cols = names(confirmed)[1:4]
con_final = confirmed %>% tidyr::pivot_longer(names(confirmed)[!names(confirmed) %in% basic_cols], names_to = "date", values_to = "cases")
dth_final = deaths %>%  tidyr::pivot_longer(names(deaths)[!names(deaths) %in% basic_cols], names_to = "date", values_to = "deaths")
rcvr  = recovered %>% tidyr::pivot_longer(names(recovered)[!names(recovered) %in% basic_cols], names_to = "date", values_to = "recovered")
f = dplyr::left_join(con_final, dth_final , by = c("Province/State", "Country/Region", "Lat", "Long", "date")) %>%
dplyr::left_join(rcvr, by = c("Province/State", "Country/Region", "Lat", "Long", "date"))
f$active = f$cases - f$deaths - f$recovered
f$date = as.Date(f$date, format = "%m/%d/%y")
f = data.table::data.table(f)
names(f) = c("state","region","lat","long","date","cases","deaths","recovered","active")
f = f[order(date)]
f[,new_cases := (cases - data.table::shift(cases)), by = c("region","state")]
f[,new_deaths := (deaths - data.table::shift(deaths)), by = c("region","state")]
f = data.frame(f)
return(f)
}
library(covid19)
corona()
tail(corona())
corona()
library(covid19)
covid19::corona()
f = covid19::corona()
f
f = covid19::corona() %>%
data.table()
library(data.table)
f = covid19::corona() %>%
data.table()
f[, sum(new_cases)/ sum(resolved) ,date]
global_growth = f[, sum(new_cases)/ sum(resolved) ,date]
plot(global_growth$date, global_growth$V1)
abline(y = 1)
abline(h = 1)
f
f$new_recovered
f$region == "Mainland China"
global_growth = f[region != "Mainland China", sum(new_cases)/ sum(resolved) ,date]
abline(h = 1)
plot(global_growth$date, global_growth$V1)
abline(h = 1)
covid19::corona()
covid19::corona()
f = covid19::corona() %>%
data.table()
f
saveRDS(f, "C:/Users/jcon4884/Desktop/corona.rds")
library(data.table)
f = covid19::corona() %>%
data.table()
global_growth = f[region != "Mainland China", sum(new_cases)/ sum(resolved) ,date]
library(covid19)
f = corona() %>%
data.table()
global_growth = f[region != "Mainland China", sum(new_cases)/ sum(resolved) ,date]
plot(global_growth$date, global_growth$V1)
abline(h = 1)
global_growth = f[region == "Australia", sum(new_cases)/ sum(resolved) ,date]
plot(global_growth$date, global_growth$V1)
abline(h = 1)
f[region == "Australia", sum(new_cases)/ sum(resolved) ,date]
global_growth = f[region == "Australia", sum(new_cases)/ (sum(resolved)+0.0001) ,date]
plot(global_growth$date, global_growth$V1)
abline(h = 1)
library(covid19)
library(data.table)
library(covid19)
f = corona() %>%
data.table()
f$growth
table(f$growth)
f$growth
View(f)
.5*17
.5*3
f$growth[is.inf(f$growth)]
f$growth[is.infinite(f$growth)]
library(covid19)
library(covid19)
example("corona")
